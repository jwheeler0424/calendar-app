{"version":3,"sources":["actions/views.js","components/CalendarTypeSelector.js","svg/Icons.js","actions/filters.js","components/TodaySelector.js","components/MonthSelector.js","components/YearSelector.js","components/CalendarSelector.js","selectors/events.js","tests/fixtures/holidays.js","utils/getHolidayList.js","utils/getNthDayOfMonth.js","components/CalendarDay.js","components/CalendarWeekly.js","components/CalendarMonthly.js","components/CalendarMonth.js","components/CalendarYearly.js","components/CalendarView.js","firebase/firebase.js","actions/events.js","tests/fixtures/colors.js","components/ColorPicker.js","components/LocationInput.js","utils/getRoundedMinute.js","components/EventForm.js","utils/formValidators.js","components/EventFormModal.js","components/AddEventPage.js","components/EditEventPage.js","components/ViewEventPage.js","components/EventListHoliday.js","components/EventListItem.js","components/EventListPage.js","components/CalendarAction.js","components/CalendarDashboardPage.js","components/LoginPage.js","actions/auth.js","components/NotFoundPage.js","components/Header.js","components/Footer.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/events.js","reducers/filters.js","reducers/holidays.js","reducers/views.js","reducers/auth.js","store/configureStore.js","reportWebVitals.js","images/loading.gif","components/LoadingPage.js","index.js"],"names":["setActiveCalendar","activeCalendar","type","setActiveView","activeView","setActiveEvent","activeEvent","setLastView","lastView","setCalendarDate","calendarDate","connect","state","views","dispatch","props","className","onClick","ArrowForward","xmlns","enableBackground","height","viewBox","width","fill","d","points","AutoFixHigh","CalendarToday","Close","DeleteForever","ExpandMore","MoreHorizontal","MoreTime","NavigateBefore","NavigateNext","Notes","Place","Schedule","setStartDate","startDate","setEndDate","endDate","setTodayDate","moment","startOf","endOf","format","monthMenuOpen","onMonthMenuChange","months","i","push","getMonths","map","month","monthDate","currentDate","valueOf","selectMonth","useState","Math","floor","year","viewYear","setViewYear","yearMenuOpen","onYearMenuChange","years","number","getYears","selectYear","CalendarSelector","setMonthMenuOpen","setYearMenuOpen","menuOpen","getVisibleEvents","events","text","sortBy","filter","event","eventStart","eventEnd","startDateMatch","isSameOrAfter","endDateMatch","isSameOrBefore","textMatch","title","toLowerCase","includes","sort","a","b","getDayEvents","date","holidays","id","name","display","n","day","getHolidayList","holiday","m","y","isoDay","daysInMonth","Error","isoWeekday","getNthDayOfMonth","setCurrentDate","find","start","end","holidayDay","selectDate","color","length","prevWeek","subtract","nextWeek","add","calendarDays","getCalendarDays","prevMonth","nextMonth","monthFirstDay","monthFirstDayDOW","monthLastDay","monthLastDayDOW","prevMonthLastDay","nextMonthFirstDay","getMonthDays","prevYear","nextYear","yearFirstMonth","yearLastMonth","calendarMonths","getCalendarMonths","filters","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","googleAuthProvider","auth","GoogleAuthProvider","addEvent","removeEvent","startRemoveEvent","getState","uid","ref","remove","then","colors","value","ColorPicker","setColor","useEffect","colorMenuOpen","setColorMenuOpen","selectColor","e","target","attributes","onColorChange","style","background","charAt","toUpperCase","slice","LocationInput","autocomplete","location","description","address","placeId","coordinates","lat","lng","setLocation","setDescription","window","google","script","document","createElement","src","head","append","addEventListener","onLoad","removeEventListener","mapElement","input","getElementById","maps","Map","center","zoom","places","Autocomplete","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","setCenter","bindTo","setFields","geocoder","Geocoder","this","addListener","place","getPlace","formatted_address","split","pop","join","place_id","geocode","results","status","console","log","geometry","coordinateString","JSON","stringify","parse","onLocationChange","undefined","onChange","getRoundedMinute","minute","ceil","setTitle","hour","startTime","setStartTime","endTime","setEndTime","duration","setDuration","notes","setNotes","onSubmit","preventDefault","eventFormMessages","messages","content","element","validateEventForm","message","onSetMessages","defaultValue","showNow","minuteStep","time","onStartTimeChange","showToday","onStartDateChange","onEndTimeChange","onEndDateChange","checked","htmlFor","rows","EventFormModal","isOpen","onRequestClose","handleClearMessages","contentLabel","closeTimeoutMS","overlayClassName","ariaHideApp","index","startAddEvent","eventData","key","setMessages","startEditEvent","updates","update","editEvent","toString","view","data","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","disableDefaultUI","setMap","route","origin","destination","travelMode","TravelMode","DRIVING","response","setDirections","contentString","infowindow","InfoWindow","marker","Marker","open","anchor","shouldFocus","startDay","endDay","EventListHoliday","dateValue","innerWidth","startLogin","signInWithPopup","NotFoundPage","Header","startLogout","to","signOut","Footer","isAuthenticated","Component","component","rest","history","createBrowserHistory","AppRouter","path","LoginPage","exact","patch","CalendarDashboardPage","eventsReducerDefaultState","eventsReducer","action","filtersReducerDefaultState","filtersReducer","holidaysReducerDefaultState","holidaysReducer","viewsReducerDefaultState","viewsReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE","compose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingPage","loader","alt","store","createStore","combineReducers","applyMiddleware","thunk","jsx","renderApp","ReactDOM","render","StrictMode","onAuthStateChanged","user","once","snapshot","eventCollection","forEach","childSnapshot","val","pathname"],"mappings":"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","file":"static/js/main.ff0e8914.chunk.js","sourcesContent":["// SET_ACTIVE_CALENDAR\r\nexport const setActiveCalendar = (activeCalendar) => ({\r\n    type: 'SET_ACTIVE_CALENDAR',\r\n    activeCalendar\r\n});\r\n\r\n// SET_ACTIVE_VIEW\r\nexport const setActiveView = (activeView) => ({\r\n    type: 'SET_ACTIVE_VIEW',\r\n    activeView\r\n});\r\n\r\n// SET_ACTIVE_EVENT\r\nexport const setActiveEvent = (activeEvent) => ({\r\n    type: 'SET_ACTIVE_EVENT',\r\n    activeEvent\r\n});\r\n\r\n// SET_LAST_VIEW\r\nexport const setLastView = (lastView) => ({\r\n    type: 'SET_LAST_VIEW',\r\n    lastView\r\n});\r\n\r\n// SET_CALENDAR_DATE\r\nexport const setCalendarDate = (calendarDate) => ({\r\n    type: 'SET_CALENDAR_DATE',\r\n    calendarDate\r\n});\r\n\r\n// SET_CURRENT_DATE\r\nexport const setCurrentDate = (currentDate) => ({\r\n    type: 'SET_CURRENT_DATE',\r\n    currentDate\r\n});\r\n\r\n// SET_TODAY_DATE\r\nexport const setTodayDate = () => ({\r\n    type: 'SET_TODAY_DATE'\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setActiveCalendar\r\n} from '../actions/views';\r\n\r\nexport const CalendarTypeSelector = (props) => {\r\n    return (\r\n        <div className=\"type-selector__wrapper\">\r\n            <button \r\n                className={\r\n                    props.views.activeCalendar === 'weekly' ? (\r\n                        \"button button--type__active\"\r\n                    ) : (\r\n                        \"button button--type\"\r\n                    )\r\n                }\r\n                onClick={() => {props.setActiveCalendar('weekly')}}\r\n            >Weekly</button>\r\n            <button \r\n                className={\r\n                    props.views.activeCalendar === 'monthly' ? (\r\n                        \"button button--type__active\"\r\n                    ) : (\r\n                        \"button button--type\"\r\n                    )\r\n                }\r\n                onClick={() => {props.setActiveCalendar('monthly')}}\r\n            >Monthly</button>\r\n            <button \r\n                className={\r\n                    props.views.activeCalendar === 'yearly' ? (\r\n                        \"button button--type__active\"\r\n                    ) : (\r\n                        \"button button--type\"\r\n                    )\r\n                }\r\n                onClick={() => {props.setActiveCalendar('yearly')}}\r\n            >Yearly</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setActiveCalendar: (activeCalendar) => dispatch(setActiveCalendar(activeCalendar))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarTypeSelector);","import React from 'react';\r\n\r\nexport const ArrowForward = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <g>\r\n            <path d=\"M0,0h24v24H0V0z\" fill=\"none\"/>\r\n        </g>\r\n        <g>\r\n            <polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\"/>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport const AutoFixHigh = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M7.5 5.6L10 7 8.6 4.5 10 2 7.5 3.4 5 2l1.4 2.5L5 7zm12 9.8L17 14l1.4 2.5L17 19l2.5-1.4L22 19l-1.4-2.5L22 14zM22 2l-2.5 1.4L17 2l1.4 2.5L17 7l2.5-1.4L22 7l-1.4-2.5zm-7.63 5.29c-.39-.39-1.02-.39-1.41 0L1.29 18.96c-.39.39-.39 1.02 0 1.41l2.34 2.34c.39.39 1.02.39 1.41 0L16.7 11.05c.39-.39.39-1.02 0-1.41l-2.33-2.35zm-1.03 5.49l-2.12-2.12 2.44-2.44 2.12 2.12-2.44 2.44z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const CalendarToday = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const Close = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const DeleteForever = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ExpandLess = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ExpandMore = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const MenuOpen = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n        <path d=\"M3 18h13v-2H3v2zm0-5h10v-2H3v2zm0-7v2h13V6H3zm18 9.59L17.42 12 21 8.41 19.59 7l-5 5 5 5L21 15.59z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const MoreHorizontal = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const MoreTime = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <g><rect fill=\"none\" height=\"24\" width=\"24\"/></g>\r\n        <g>\r\n            <g>\r\n                <polygon points=\"10,8 10,14 14.7,16.9 15.5,15.7 11.5,13.3 11.5,8\"/>\r\n                <path d=\"M17.92,12c0.05,0.33,0.08,0.66,0.08,1c0,3.9-3.1,7-7,7s-7-3.1-7-7c0-3.9,3.1-7,7-7c0.7,0,1.37,0.1,2,0.29V4.23 C12.36,4.08,11.69,4,11,4c-5,0-9,4-9,9s4,9,9,9s9-4,9-9c0-0.34-0.02-0.67-0.06-1H17.92z\"/>\r\n                <polygon points=\"20,5 20,2 18,2 18,5 15,5 15,7 18,7 18,10 20,10 20,7 23,7 23,5\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n);\r\n\r\nexport const NavigateBefore = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const NavigateNext = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const Notes = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n        <path d=\"M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const Place = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const Schedule = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\r\n        <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/>\r\n    </svg>\r\n);","// SET_TEXT_FILTER\r\nexport const setTextFilter = (text = '') => ({\r\n    type: 'SET_TEXT_FILTER',\r\n    text\r\n});\r\n\r\n// SORT_BY_DATE\r\nexport const sortByDate = () => ({\r\n    type: 'SORT_BY_DATE'\r\n});\r\n\r\n// SET_START_DATE\r\nexport const setStartDate = (startDate) => ({\r\n    type: 'SET_START_DATE',\r\n    startDate\r\n});\r\n\r\n// SET_END_DATE\r\nexport const setEndDate = (endDate) => ({\r\n    type: 'SET_END_DATE',\r\n    endDate\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { CalendarToday } from '../svg/Icons';\r\nimport { setTodayDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\n\r\nexport const TodaySelector = (props) => {\r\n    const setToday = () => {\r\n        const startDate = moment().startOf('day');\r\n        const endDate = moment().endOf('day');\r\n        props.setTodayDate();\r\n        props.setStartDate(startDate);\r\n        props.setEndDate(endDate);\r\n    }\r\n    return (\r\n        <button className=\"button button--today\" onClick={setToday}>\r\n            <CalendarToday />\r\n            <span>{moment().format('DD')}</span>\r\n        </button>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTodayDate: () => dispatch(setTodayDate()),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodaySelector);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { ExpandMore } from '../svg/Icons';\r\nimport { setCalendarDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\n\r\nexport const MonthSelector = (props) => {\r\n    \r\n    const toggleMonthSelectMenu = () => {\r\n        props.monthMenuOpen === ' open' ? props.onMonthMenuChange('') : props.onMonthMenuChange(' open');\r\n    };\r\n\r\n    const selectMonth = (month) => {\r\n        const calendarDate = moment(props.views.calendarDate.valueOf()).month(month);\r\n        const startDate = moment(props.views.calendarDate.valueOf()).month(month).startOf('day');\r\n        const endDate = moment(props.views.calendarDate.valueOf()).month(month).endOf('day');\r\n        props.setCalendarDate(calendarDate);\r\n        props.setStartDate(startDate);\r\n        props.setEndDate(endDate);\r\n        props.onMonthMenuChange('');\r\n    };\r\n\r\n    const getMonths = () => {\r\n        const months = [];\r\n        for (let i=0; i<12; i++) {\r\n            months.push(i)\r\n        }\r\n        return months;\r\n    };\r\n\r\n    return (\r\n        <div className=\"month-selector__wrapper\">\r\n            <div className=\"month-selector__selected\" onClick={toggleMonthSelectMenu}>\r\n                <span className=\"month-selector__title\">{moment(props.views.calendarDate).format('MMMM')}</span>\r\n                <ExpandMore className=\"material-icons\" />\r\n            </div>\r\n            <div className={'month-selector__selector' + props.monthMenuOpen}>\r\n                <div className=\"month-selector__select\">\r\n                    {\r\n                        getMonths().map((month) => {\r\n                            const monthDate = moment();\r\n                            monthDate.month(month)\r\n                            return (\r\n                                <div\r\n                                    className={monthDate.month() === moment(props.views.currentDate).month() ? 'selected' : ''}\r\n                                    onClick={() => selectMonth(month)}\r\n                                    month={month}\r\n                                    key={monthDate.format('MMM')}\r\n                                >\r\n                                    {monthDate.format('MMM')}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthSelector);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { NavigateBefore, NavigateNext, ExpandMore } from '../svg/Icons';\r\nimport { setCalendarDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\n\r\nexport const YearSelector = (props) => { \r\n    \r\n    const [viewYear, setViewYear] = useState(\r\n        props.views ? Math.floor(moment(props.views.calendarDate).year() / 10) * 10 : Math.floor(moment().year() / 10) * 10\r\n    );\r\n    const toggleYearSelectMenu = () => {\r\n        props.yearMenuOpen === ' open' ? props.onYearMenuChange('') : props.onYearMenuChange(' open');\r\n    }\r\n    const getYears = () => {\r\n        const years = [];\r\n\r\n        years.push({\r\n            type: 'pre',\r\n            number: viewYear - 1\r\n        });\r\n        for(let i = viewYear; i <= viewYear + 9; i++) {\r\n            years.push({\r\n                type: 'current',\r\n                number: i\r\n            });\r\n        };\r\n        years.push({\r\n            type: 'next',\r\n            number: viewYear + 10\r\n        });\r\n\r\n        return years;\r\n    }\r\n    const setPrevYear = () => {\r\n        setViewYear(viewYear - 10);\r\n    }\r\n    const setNextYear = () => {\r\n        setViewYear(viewYear + 10);\r\n    }\r\n    const selectYear = (year) => {\r\n        const calendarDate = moment(props.views.calendarDate.valueOf()).year(year);\r\n        const startDate = moment(props.views.calendarDate.valueOf()).year(year).startOf('day');\r\n        const endDate = moment(props.views.calendarDate.valueOf()).year(year).endOf('day');\r\n        props.setCalendarDate(calendarDate);\r\n        props.setStartDate(startDate);\r\n        props.setEndDate(endDate);\r\n        props.onYearMenuChange('');\r\n    }\r\n    return (\r\n        <div className=\"year-selector__wrapper\">\r\n            <div className=\"year-selector__selected\" onClick={toggleYearSelectMenu}>\r\n                <span className=\"year-selector__title\">{moment(props.views.calendarDate).year()}</span>\r\n                <ExpandMore className=\"material-icons\" />\r\n            </div>\r\n            <div className={'year-selector__selector' + props.yearMenuOpen}>\r\n                <div className=\"year-selector__nav\">\r\n                    <button className=\"year-selector__prev\" onClick={setPrevYear}>\r\n                        <NavigateBefore className=\"material-icons\" />\r\n                    </button>\r\n                    <div className=\"year-selector__range\">\r\n                        {`\r\n                            ${viewYear}\r\n                            -\r\n                            ${viewYear + 10}\r\n                        `}\r\n                    </div>\r\n                    <button className=\"year-selector__next\" onClick={setNextYear}>\r\n                        <NavigateNext className=\"material-icons\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"year-selector__select\">\r\n                    {\r\n                        getYears().map((year) => {\r\n                            let className;\r\n                            if (year.type !== 'current') {\r\n                                className = 'pre-next';\r\n                            } else {\r\n                                className = year.number === moment(props.views.calendarDate).year() ? 'selected' : '';\r\n                            }\r\n\r\n                            return (\r\n                                <div\r\n                                    className={className}\r\n                                    onClick={year.type === 'current' ? () => selectYear(year.number) : () => {}}\r\n                                    year={year.number}\r\n                                    key={year.number}\r\n                                >\r\n                                    {year.number}\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YearSelector);","import React, { useState } from 'react';\r\nimport CalendarTypeSelector from './CalendarTypeSelector';\r\nimport TodaySelector from './TodaySelector';\r\nimport MonthSelector from './MonthSelector';\r\nimport YearSelector from './YearSelector';\r\n\r\nconst CalendarSelector = () => {\r\n    const [monthMenuOpen, setMonthMenuOpen] = useState('');\r\n    const [yearMenuOpen, setYearMenuOpen] = useState('');\r\n\r\n    const onMonthMenuChange = (menuOpen) => {\r\n        if (monthMenuOpen === ' open') {\r\n            setMonthMenuOpen('');\r\n        } else {\r\n            setYearMenuOpen('');\r\n            setMonthMenuOpen(' open');\r\n        }\r\n    };\r\n\r\n    const onYearMenuChange = (menuOpen) => {\r\n        if (yearMenuOpen === ' open') {\r\n            setYearMenuOpen('');\r\n        } else {\r\n            setMonthMenuOpen('');\r\n            setYearMenuOpen(' open');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-selector__wrapper content-container\">\r\n            <div className=\"date-selector__wrapper\">\r\n                <TodaySelector />\r\n                <MonthSelector monthMenuOpen={monthMenuOpen} onMonthMenuChange={onMonthMenuChange} />\r\n                <YearSelector yearMenuOpen={yearMenuOpen} onYearMenuChange={onYearMenuChange} />\r\n            </div>\r\n            <CalendarTypeSelector />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarSelector;","import moment from 'moment';\r\n\r\n// Get visible events\r\nexport const getVisibleEvents = (events, { text, sortBy, startDate, endDate }) => {\r\n    return events.filter((event) => {\r\n        const eventStart = moment(event.startDate);\r\n        const eventEnd = moment(event.endDate);\r\n        const startDateMatch = startDate ? startDate.isSameOrAfter(eventStart, 'day') : true;\r\n        const endDateMatch = endDate ? endDate.isSameOrBefore(eventEnd, 'day') : true;\r\n        const textMatch = event.title.toLowerCase().includes(text.toLowerCase());\r\n\r\n        return startDateMatch && endDateMatch && textMatch;\r\n    }).sort((a, b) => {\r\n        switch (sortBy) {\r\n            case 'date':\r\n                return a.startDate < b.startDate ? -1 : 1;\r\n            default: \r\n                return a.startDate < b.startDate ? -1 : 1;\r\n        }\r\n    });\r\n}\r\n\r\nexport const getDayEvents = (events, date) => {\r\n    return events.filter((event) => {\r\n        const eventStart = moment(event.startDate);\r\n        const eventEnd = moment(event.endDate);\r\n        const startDateMatch = date ? date.isSameOrAfter(eventStart, 'day') : true;\r\n        const endDateMatch = date ? date.isSameOrBefore(eventEnd, 'day') : true;\r\n\r\n        return startDateMatch && endDateMatch\r\n    }).sort((a, b) => {\r\n        return a.startDate < b.startDate ? -1 : 1;\r\n    });\r\n};","const holidays = [{\r\n    id: '0',\r\n    name: \"New Year's Day\",\r\n    month: 0, // January\r\n    date:1,\r\n    display: true\r\n}, {\r\n    id: '1',\r\n    name: \"Martin Luther King Jr. Day\",\r\n    month: 0,  // January\r\n    date: { n: 3, day: 'Monday'}, // 3rd Monday in January\r\n    display: true\r\n}, {\r\n    id: '2',\r\n    name: \"Valentine's Day\",\r\n    month: 1, // February\r\n    date: 14,\r\n    display: true\r\n}, {\r\n    id: '3',\r\n    name: \"President's Day\",\r\n    month: 1, // February\r\n    date: { n: 3, day: 'Monday'}, // 3rd Monday in February\r\n    display: true\r\n}, {\r\n    id: '4',\r\n    name: \"St. Patrick's Day\",\r\n    month: 2, // March\r\n    date: 17,\r\n    display: true\r\n}, {\r\n    id: '5',\r\n    name: \"Starwars Day\",\r\n    month: 4, // May\r\n    date: 4,\r\n    display: true\r\n}, {\r\n    id: '6',\r\n    name: \"Cinco de Mayo\",\r\n    month: 4, // May\r\n    date: 5,\r\n    display: true\r\n}, {\r\n    id: '7',\r\n    name: \"Mother's Day\",\r\n    month: 4, // May\r\n    date: { n: 2, day: 'Sunday'}, // 2nd Sunday in May\r\n    display: true\r\n}, {\r\n    id: '8',\r\n    name: \"Memorial Day\",\r\n    month: 4, // May\r\n    date: { n: 0, day: 'Monday'}, // Last Monday in May\r\n    display: true\r\n}, {\r\n    id: '9',\r\n    name: \"Juneteenth\",\r\n    month: 5, // June\r\n    date: 19,\r\n    display: true\r\n}, {\r\n    id: '10',\r\n    name: \"Father's Day\",\r\n    month: 5, // June\r\n    date: { n: 3, day: 'Sunday'}, // 3rd Sunday in June\r\n    display: true\r\n}, {\r\n    id: '11',\r\n    name: \"Independence Day\",\r\n    month: 6, // July\r\n    date:4,\r\n    display: true\r\n}, {\r\n    id: '12',\r\n    name: \"Labor Day\",\r\n    month: 8, // September\r\n    date: { n: 1, day: 'Monday'}, // 1st Monday in September\r\n    display: true\r\n}, {\r\n    id: '13',\r\n    name: \"US Indigenous People's Day\",\r\n    month: 9, // October\r\n    date: { n: 2, day: 'Monday'}, // 2nd Monday in October\r\n    display: true\r\n}, {\r\n    id: '14',\r\n    name: \"Halloween\",\r\n    month: 9, // October\r\n    date: 31,\r\n    display: true\r\n}, {\r\n    id: '15',\r\n    name: \"Veteran's Day\",\r\n    month: 10, // November\r\n    date:11,\r\n    display: true\r\n}, {\r\n    id: '16',\r\n    name: \"Thanksgiving\",\r\n    month: 10, // November\r\n    date: { n: 4, day: 'Thursday'}, // 4th Thursday in November\r\n    display: true\r\n}, {\r\n    id: '17',\r\n    name: \"Christmas Eve\",\r\n    month: 11, // December\r\n    date:24,\r\n    display: true\r\n}, {\r\n    id: '18',\r\n    name: \"Christmas Day\",\r\n    month: 11, // December\r\n    date:25,\r\n    display: true\r\n}, {\r\n    id: '19',\r\n    name: \"New Year's Eve\",\r\n    month: 11, // December\r\n    date:31,\r\n    display: true\r\n}];\r\n\r\nexport { holidays as default };","import holidays from '../tests/fixtures/holidays';\r\nimport getNthDayOfMonth from './getNthDayOfMonth';\r\n\r\nconst getHolidayList = (year) => {\r\n    const holidayList = holidays.map((holiday) => {\r\n        const date = typeof(holiday.date) === 'number' ? holiday.date : getNthDayOfMonth(holiday.date.n, holiday.date.day, holiday.month, year);\r\n        return {\r\n            name: holiday.name,\r\n            month: holiday.month,\r\n            date: date,\r\n            display: holiday.display\r\n        };\r\n    });\r\n\r\n    return holidayList;\r\n}\r\n\r\nexport { getHolidayList as default }","import moment from 'moment';\r\n\r\nconst getNthDayOfMonth = (n, d, m, y) => {\r\n    let date, isoDay;\r\n    const daysInMonth = moment().month(m).year(y).daysInMonth();\r\n    \r\n    switch (d.toLowerCase()) {\r\n        case 'monday':\r\n            isoDay = 1 + n * 7;\r\n            break;\r\n        case 'tuesday':\r\n            isoDay = 2 + n * 7;\r\n            break;\r\n        case 'wednesday':\r\n            isoDay = 3 + n * 7;\r\n            break;\r\n        case 'thursday':\r\n            isoDay = 4 + n * 7;\r\n            break;\r\n        case 'friday':\r\n            isoDay = 5 + n * 7;\r\n            break;\r\n        case 'saturday':\r\n            isoDay = 6 + n * 7;\r\n            break;\r\n        case 'sunday':\r\n            isoDay = 0 + n * 7;\r\n            break;\r\n        default:\r\n            throw new Error('Must enter a the full named day of week.');\r\n    }\r\n\r\n    if (isoDay > daysInMonth) { isoDay -= 7};\r\n\r\n    if(n !== 0)  {\r\n        if(moment().month(m).year(y).startOf('month').day(1).date() === 1 && d === 'Monday') {\r\n            date = moment().month(m).year(y).startOf('month').isoWeekday(isoDay - 7).date()\r\n        } else {\r\n            date = moment().month(m).year(y).startOf('month').isoWeekday(isoDay).date()\r\n        }\r\n    } else {\r\n        date = moment().month(m).year(y).endOf('month').isoWeekday(isoDay).date()\r\n    }\r\n    \r\n    return date;\r\n}\r\n\r\nexport { getNthDayOfMonth as default };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { setCalendarDate, setCurrentDate, setActiveView, setLastView } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\nimport { getDayEvents } from '../selectors/events';\r\nimport { MoreHorizontal } from '../svg/Icons';\r\nimport getHolidayList from '../utils/getHolidayList';\r\n\r\nexport const CalendarDay = (props) => {\r\n    //console.log(props.views.calendarDate.year())\r\n    //console.log(getHolidayList(props.views.calendarDate.year()))\r\n    const holiday = getHolidayList(props.date.year()).find((holiday) => {\r\n        const start = moment(props.date).startOf('day').valueOf();\r\n        const end = moment(props.date).endOf('day').valueOf();\r\n        const holidayDay = moment().date(holiday.date).month(holiday.month).year(props.date.year()).valueOf();\r\n\r\n        return holidayDay >= start && holidayDay <= end && holiday.display\r\n    });\r\n    const events = getDayEvents(props.events, props.date);\r\n    const selectDate = (date) => {\r\n        const calendarDate = moment(date.valueOf());\r\n        const currentDate = moment(date.valueOf());\r\n        const startDate = moment(date.valueOf());\r\n        const endDate = moment(date.valueOf()).endOf('day');\r\n        props.setCalendarDate(calendarDate);\r\n        props.setCurrentDate(currentDate);\r\n        props.setStartDate(startDate);\r\n        props.setEndDate(endDate);\r\n        props.setLastView('');\r\n        props.setActiveView('list');\r\n    };\r\n    \r\n    return (\r\n        <div \r\n            className={props.type==='current' ? \"calendar-day\" : \"calendar-day pre-next\"}\r\n            title={props.date.format(\"MMM Do\")}\r\n            onClick={() => selectDate(props.date)}\r\n            key={props.date}\r\n            date={props.date}\r\n        >\r\n            <div className={props.date.format('MMDDYY') === moment().format('MMDDYY') ? 'content current-day' : 'content'}>\r\n                <div className=\"day-num\">{props.date.format(\"D\")}</div>\r\n                {holiday && \r\n                    <div className=\"holiday\">\r\n                        <div className=\"day-event\">{holiday.name}</div>\r\n                    </div>\r\n                }\r\n                {events.map((event) => (\r\n                    <div key={event.id} className={event.color}>\r\n                        {/* check if event is between days or starts on suday */\r\n                            (moment(event.startDate).startOf('day') !== moment(event.endDate).startOf('day')) ? (\r\n                                (props.date.format('dddd') !== 'Sunday' && props.date > moment(event.startDate)) ? (\r\n                                    <div className=\"day-event hidden\">{event.title}</div>\r\n                                ) : (\r\n                                    <div className=\"day-event\">{event.title}</div>\r\n                                )\r\n                            ) : (\r\n                                <div className=\"day-event\">{event.title}</div>\r\n                            )\r\n                        }\r\n                        \r\n                    </div>\r\n                ))}\r\n                {(holiday && events.length >= 2) || events.length >= 3 ? <MoreHorizontal /> : <></>}\r\n            </div>                \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views,\r\n    events: state.events\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setActiveView: (activeView) => dispatch(setActiveView(activeView)),\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setCurrentDate: (currentDate) => dispatch(setCurrentDate(currentDate)),\r\n    setLastView: (lastView) => dispatch(setLastView(lastView)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarDay);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { NavigateBefore, NavigateNext } from '../svg/Icons';\r\nimport { setCalendarDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\nimport CalendarDay from './CalendarDay';\r\n\r\nexport const  CalendarWeekly = (props) => {\r\n    const getCalendarDays = (calendarDate) => {\r\n        const calendarDays = [];\r\n        \r\n        for(let i=0; i<=6; i++) {\r\n            calendarDays.push({\r\n                type: 'current',\r\n                date: moment(calendarDate.valueOf()).startOf('week').add(i, 'days').startOf('day')\r\n            });\r\n        }\r\n    \r\n        return calendarDays\r\n    };\r\n\r\n    const setWeekPrev = () => {\r\n        const prevWeek = moment(props.views.calendarDate.valueOf()).subtract(1, 'weeks');\r\n        props.setCalendarDate(prevWeek);\r\n    };\r\n\r\n    const setWeekNext = () => {\r\n        const nextWeek = moment(props.views.calendarDate.valueOf()).add(1, 'weeks');\r\n        props.setCalendarDate(nextWeek);\r\n    }\r\n    \r\n    const prevWeek = moment(props.views.calendarDate).subtract(1, 'weeks');\r\n    const nextWeek = moment(props.views.calendarDate).add(1, 'weeks');\r\n\r\n    return (\r\n        <div className={props.views.activeView ? 'calendar-weekly__wrapper hide-mobile' : 'calendar-weekly__wrapper'}>\r\n            <button className=\"button button--nav-prev\" onClick={setWeekPrev}><NavigateBefore /> {prevWeek.format('wo')} Week</button>\r\n            <button className=\"button button--nav-next\" onClick={setWeekNext}>{nextWeek.format('wo')} Week <NavigateNext /></button>\r\n            <h1 className=\"calendar-weekly__title\">\r\n                {moment(props.views.calendarDate.valueOf()).startOf('week').format('MMM Do')}\r\n                &nbsp;-&nbsp;\r\n                {moment(props.views.calendarDate.valueOf()).endOf('week').format('MMM Do')}\r\n            </h1>\r\n            <div className=\"calender-weekly__view\">\r\n                {getCalendarDays(props.views.calendarDate).map((day) => (\r\n                    <div className=\"calendar-weekly__weekday\" key={day.date.format('MMDDYYYY')}>\r\n                        {moment().format('MMDDYYYY') === moment(day.date.valueOf()).format('MMDDYYYY') ? (\r\n                            <div className=\"weekday-title current-date\">{day.date.format('dddd')}</div>\r\n                        ) : (\r\n                            <div className=\"weekday-title\">{day.date.format('dddd')}</div>\r\n                        )}\r\n                        <CalendarDay \r\n                            date={day.date}\r\n                            key={day.date.valueOf()}\r\n                            type={day.type}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarWeekly);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { NavigateBefore, NavigateNext } from '../svg/Icons';\r\nimport { setCalendarDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\nimport CalendarDay from './CalendarDay';\r\n\r\nexport const CalendarMonthly = (props) => {\r\n    const getCalendarDays = (calendarDate) => {\r\n        const monthFirstDay = moment(calendarDate).startOf('month');\r\n        const monthFirstDayDOW = monthFirstDay.day();\r\n        const monthLastDay = moment(calendarDate).endOf('month');\r\n        const monthLastDayDOW = monthLastDay.day();\r\n        const prevMonthLastDay = moment(calendarDate).subtract(1, 'months').endOf('month');\r\n        const nextMonthFirstDay = moment(calendarDate).add(1, 'months').startOf('month');\r\n        const calendarDays = [];\r\n        \r\n        for(let i=prevMonthLastDay.date() - monthFirstDayDOW + 1; i<=prevMonthLastDay.date(); i++) {\r\n            calendarDays.push({\r\n                type: 'pre',\r\n                date: moment(prevMonthLastDay).date(i).startOf('day')\r\n            });\r\n        }\r\n        for(let i=monthFirstDay.date(); i<=monthLastDay.date(); i++) {\r\n            calendarDays.push({\r\n                type: 'current',\r\n                date: moment(calendarDate).date(i).startOf('day')\r\n            });\r\n        }\r\n        for(let i=nextMonthFirstDay.date(); i<=(nextMonthFirstDay.date() + (6-monthLastDayDOW) - 1); i++) {\r\n            calendarDays.push({\r\n                type: 'next',\r\n                date: moment(nextMonthFirstDay).date(i).startOf('day')\r\n            });\r\n        }\r\n    \r\n        return calendarDays\r\n    };\r\n\r\n    const getWeekDayTitles = () => {\r\n        return ([0,1,2,3,4,5,6])\r\n    };\r\n\r\n    const setMonthPrev = () => {\r\n        const prevMonth = moment(props.views.calendarDate.valueOf()).subtract(1, 'months');\r\n        props.setCalendarDate(prevMonth);\r\n    };\r\n\r\n    const setMonthNext = () => {\r\n        const nextMonth = moment(props.views.calendarDate.valueOf()).add(1, 'months');\r\n        props.setCalendarDate(nextMonth);\r\n    };\r\n\r\n    const prevMonth = moment(props.views.calendarDate).subtract(1, 'months');\r\n    const nextMonth = moment(props.views.calendarDate).add(1, 'months');\r\n    \r\n    return (\r\n        <div className={props.views.activeView ? 'calendar-monthly__wrapper hide-mobile' : 'calendar-monthly__wrapper'}>\r\n            <button className=\"button button--nav-prev\" onClick={setMonthPrev}><NavigateBefore /> {prevMonth.format('MMMM')}</button>\r\n            <button className=\"button button--nav-next\" onClick={setMonthNext}>{nextMonth.format('MMMM')} <NavigateNext /></button>\r\n            <h1 className=\"calendar-monthly__title\">{moment(props.views.calendarDate).format('MMMM YYYY')}</h1>\r\n            <div className=\"calendar-monthly__weekday-titles\">\r\n                {getWeekDayTitles().map((day) => (\r\n                    <div key={moment().day(day).format('ddd')}>\r\n                        {moment().day(day).format('ddd')}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"calendar-monthly__month\">\r\n                {getCalendarDays(props.views.calendarDate).map((day) => (\r\n                    <CalendarDay \r\n                        date={day.date}\r\n                        key={day.date.valueOf()}\r\n                        type={day.type}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarMonthly);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { setActiveCalendar, setCalendarDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\nimport { getDayEvents } from '../selectors/events';\r\nimport getHolidayList from '../utils/getHolidayList';\r\n\r\nexport const  CalendarMonth = (props) => {\r\n    const getMonthDays = (calendarDate) => {\r\n        const monthFirstDay = moment(calendarDate).startOf('month');\r\n        const monthFirstDayDOW = monthFirstDay.day();\r\n        const monthLastDay = moment(calendarDate).endOf('month');\r\n        const monthLastDayDOW = monthLastDay.day();\r\n        const prevMonthLastDay = moment(calendarDate).subtract(1, 'months').endOf('month');\r\n        const nextMonthFirstDay = moment(calendarDate).add(1, 'months').startOf('month');\r\n        const calendarDays = [];\r\n        \r\n        for(let i=prevMonthLastDay.date() - monthFirstDayDOW + 1; i<=prevMonthLastDay.date(); i++) {\r\n            calendarDays.push({\r\n                type: 'pre',\r\n                date: moment(prevMonthLastDay).date(i).startOf('day')\r\n            });\r\n        }\r\n        for(let i=monthFirstDay.date(); i<=monthLastDay.date(); i++) {\r\n            calendarDays.push({\r\n                type: 'current',\r\n                date: moment(calendarDate).date(i).startOf('day')\r\n            });\r\n        }\r\n        for(let i=nextMonthFirstDay.date(); i<=(nextMonthFirstDay.date() + (6-monthLastDayDOW) - 1); i++) {\r\n            calendarDays.push({\r\n                type: 'next',\r\n                date: moment(nextMonthFirstDay).date(i).startOf('day')\r\n            });\r\n        }\r\n    \r\n        return calendarDays\r\n    };\r\n\r\n    const selectMonth = (date) => {\r\n        const calendarDate = moment(date.valueOf());\r\n        const startDate = moment(date.valueOf());\r\n        const endDate = moment(date.valueOf()).endOf('day');\r\n        \r\n        props.setCalendarDate(calendarDate);\r\n        props.setStartDate(startDate);\r\n        props.setEndDate(endDate);\r\n        props.setActiveCalendar('monthly');\r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"calendar-month\"\r\n            title={props.month.format(\"MMMM - YYYY\")}\r\n            onClick={() => selectMonth(props.month)}\r\n            key={props.month}\r\n            date={props.month}\r\n        >\r\n            <div className=\"month-days\">\r\n                {getMonthDays(props.month.valueOf()).map((day) => {\r\n                    const holiday = getHolidayList(day.date.year()).find((holiday) => {\r\n                        const start = moment(day.date).startOf('day').valueOf();\r\n                        const end = moment(day.date).endOf('day').valueOf();\r\n                        const holidayDay = moment().date(holiday.date).month(holiday.month).year(day.date.year()).valueOf();\r\n                \r\n                        return holidayDay >= start && holidayDay <= end && holiday.display\r\n                    });\r\n                    const events = getDayEvents(props.events, day.date);\r\n                    return (\r\n                        <div \r\n                            className={day.type==='current' ? \"calendar-day\" : \"calendar-day pre-next\"}\r\n                            key={day.date.valueOf()}\r\n                        >\r\n                            {holiday && <div className=\"holiday\">\r\n                                <div className=\"day-event\"></div>\r\n                            </div>}\r\n                            <div \r\n                                className={day.date.format('MMDDYYYY') === moment().format('MMDDYYYY') ? (\r\n                                    'content current-day'\r\n                                ) : (\r\n                                    'content'\r\n                                )}\r\n                            >\r\n                                {day.date.format('D')}\r\n                            </div>\r\n                            {events.length > 0 && <div className={events[0].color}>\r\n                                <div className=\"day-event\"></div>\r\n                            </div>}\r\n                        </div>\r\n                    )\r\n                }\r\n                )}\r\n            </div>                 \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views,\r\n    events: state.events\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setActiveCalendar: (activeCalendar) => dispatch(setActiveCalendar(activeCalendar)),\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarMonth);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { NavigateBefore, NavigateNext } from '../svg/Icons';\r\nimport { setCalendarDate } from '../actions/views';\r\nimport { setStartDate, setEndDate } from '../actions/filters';\r\nimport CalendarMonth from './CalendarMonth';\r\n\r\nexport const CalendarYearly = (props) => {\r\n    const getCalendarMonths = (calendarDate) => {\r\n        const yearFirstMonth = moment(calendarDate).startOf('year');\r\n        const yearLastMonth = moment(calendarDate).endOf('year');\r\n        const calendarMonths = [];\r\n        \r\n        for(let i=yearFirstMonth.month(); i<=yearLastMonth.month(); i++) {\r\n            calendarMonths.push({\r\n                type: 'current',\r\n                date: moment(calendarDate).month(i).startOf('month')\r\n            });\r\n        }\r\n    \r\n        return calendarMonths\r\n    };\r\n\r\n    const setYearPrev = () => {\r\n        const prevYear = moment(props.views.calendarDate.valueOf()).subtract(1, 'years');\r\n        props.setCalendarDate(prevYear);\r\n    };\r\n\r\n    const setYearNext = () => {\r\n        const nextYear = moment(props.views.calendarDate.valueOf()).add(1, 'years');\r\n        props.setCalendarDate(nextYear);\r\n    };\r\n\r\n    const prevYear = moment(props.views.calendarDate).subtract(1, 'years');\r\n    const nextYear = moment(props.views.calendarDate).add(1, 'years');\r\n    \r\n    return (\r\n        <div className=\"calendar-yearly__wrapper\">\r\n            <button className=\"button button--nav-prev\" onClick={setYearPrev}><NavigateBefore /> {prevYear.format('YYYY')}</button>\r\n            <button className=\"button button--nav-next\" onClick={setYearNext}>{nextYear.format('YYYY')} <NavigateNext /></button>\r\n            <h1 className=\"calendar-yearly__title\">{moment(props.views.calendarDate).format('YYYY')}</h1>\r\n            <div className=\"calendar-yearly__view\">\r\n                {getCalendarMonths(props.views.calendarDate).map((month) => (\r\n                    <div \r\n                        className={\r\n                            moment().startOf('month').format('MMDDYYYY') === moment(month.date.valueOf()).format('MMDDYYYY') ? (\r\n                                \"calendar-yearly__month current-month\"\r\n                            ) : (\r\n                                \"calendar-yearly__month\"\r\n                            )\r\n                        }\r\n                        key={month.date.format('MMMM')}\r\n                    > \r\n                        <div className=\"month-title\">{month.date.format('MMMM')}</div>\r\n                        <CalendarMonth \r\n                            month={month.date}\r\n                            key={month.date.valueOf()}\r\n                            type={month.type}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCalendarDate: (calendarDate) => dispatch(setCalendarDate(calendarDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarYearly);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CalendarWeekly from './CalendarWeekly';\r\nimport CalendarMonthly from './CalendarMonthly';\r\nimport CalendarYearly from './CalendarYearly';\r\n\r\nexport const CalendarView = (props) => {\r\n    switch (props.views.activeCalendar) {\r\n        case 'weekly':\r\n            return (<CalendarWeekly />);\r\n        case 'monthly':\r\n            return (<CalendarMonthly />);\r\n        case 'yearly':\r\n            return (<CalendarYearly />);\r\n        default: \r\n            return (<CalendarMonthly />)\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views,\r\n    filters: state.filters\r\n});\r\n\r\nexport default connect(mapStateToProps)(CalendarView);","import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst database = firebase.database();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { firebase, googleAuthProvider, database as default };","import database from '../firebase/firebase';\r\n\r\n// ADD_EVENT\r\nexport const addEvent = (event) => ({\r\n    type: 'ADD_EVENT',\r\n    event\r\n});\r\n\r\nexport const startAddEvent = (eventData = {}) => {\r\n    return (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        const {\r\n            title = '',\r\n            startDate = 0,\r\n            endDate = 0,\r\n            duration = 'time',\r\n            color = 'peacock',\r\n            location = '',\r\n            notes = ''\r\n        } = eventData;\r\n\r\n        const event = { title, startDate, endDate, duration, color, location, notes }\r\n\r\n        return database.ref(`users/${uid}/events`).push(event).then((ref) => {\r\n            dispatch(addEvent({\r\n                id: ref.key,\r\n                ...event\r\n            }));\r\n        });\r\n    }\r\n}\r\n\r\n// REMOVE_EVENT\r\nexport const removeEvent = ({ id } = {}) => ({\r\n    type: 'REMOVE_EVENT',\r\n    id\r\n});\r\n\r\nexport const startRemoveEvent = ({ id } = {}) => {\r\n    return (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        return database.ref(`users/${uid}/events/${id}`).remove().then((ref) => {\r\n            dispatch(removeEvent({ id }));\r\n        });\r\n    }\r\n}\r\n\r\n// EDIT_EVENT\r\nexport const editEvent = (id, updates) => ({\r\n    type: 'EDIT_EVENT',\r\n    id,\r\n    updates\r\n});\r\n\r\nexport const startEditEvent = (id, updates) => {\r\n    return (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        return database.ref(`users/${uid}/events/${id}`).update(updates).then((ref) => {\r\n            dispatch(editEvent(id, updates));\r\n        });\r\n    }\r\n}\r\n\r\n// POPULATE_EVENTS\r\nexport const populateEvents = (events) => ({\r\n    type: 'POPULATE_EVENTS',\r\n    events\r\n});\r\n\r\nexport const startPopulateEvents = () => {\r\n    return (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        return database.ref(`users/${uid}/events`).once('value').then((snapshot) => {\r\n            const eventCollection = [];\r\n            \r\n            snapshot.forEach((childSnapshot) => {\r\n                eventCollection.push({\r\n                    id: childSnapshot.key,\r\n                    ...childSnapshot.val()\r\n                });\r\n            });\r\n            \r\n            dispatch(populateEvents(eventCollection));\r\n        });\r\n    };\r\n};","const colors = [{ \r\n    title: 'banana',\r\n    value: 'rgb(245, 192, 58)' \r\n}, {\r\n    title: 'basil',\r\n    value: 'rgb(17, 129, 71)'\r\n}, {\r\n    title: 'blueberry',\r\n    value: 'rgb(66, 78, 178)'\r\n}, {\r\n    title: 'flamingo',\r\n    value: 'rgb(228, 124, 116)'\r\n}, {\r\n    title: 'grape',\r\n    value: 'rgb(142, 26, 167)'\r\n}, {\r\n    title: 'graphite',\r\n    value: 'rgb(97, 97, 97)'\r\n}, {\r\n    title: 'lavendar',\r\n    value: 'rgb(122, 132, 201)'\r\n}, {\r\n    title: 'peacock',\r\n    value: 'rgb(121, 185, 225)'\r\n}, {\r\n    title: 'sage',\r\n    value: 'rgb(55, 183, 124)'\r\n}, {\r\n    title: 'tangerine',\r\n    value: 'rgb(242, 81, 37)'\r\n}, {\r\n    title: 'tomato',\r\n    value: 'rgb(211, 0, 6)'\r\n}];\r\n\r\nexport { colors as default };","import React, { useEffect, useState } from 'react';\r\nimport { ExpandMore } from '../svg/Icons';\r\nimport colors from '../tests/fixtures/colors';\r\n\r\nconst ColorPicker = (props) => {\r\n    const [color, setColor] = useState(\r\n        props.color ? colors.filter((color) => color.title === props.color)[0] : {\r\n        title: 'peacock',\r\n        value: 'rgb(121, 185, 225)'\r\n    });\r\n    useEffect(() => {\r\n        setColor(colors.filter((color) => color.title === props.color)[0]);\r\n    }, [props.color])\r\n\r\n    const [colorMenuOpen, setColorMenuOpen] = useState('');\r\n    const toggleColorSelectMenu = (e) => {\r\n        colorMenuOpen === ' open' ? setColorMenuOpen('') : setColorMenuOpen(' open');\r\n    }\r\n    const selectColor = (e) => {\r\n        const title = e.target.attributes[1].value;\r\n        const value = e.target.attributes[2].value;\r\n        setColor({ title, value });\r\n        props.onColorChange(title);\r\n        setColorMenuOpen('');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"color-selector__wrapper\">\r\n            <div className=\"color-selector__selected\" onClick={toggleColorSelectMenu} title=\"Select Event Color\">\r\n                <span className=\"color-selector__title\" style={{background: color.value}}></span>\r\n                <ExpandMore className=\"material-icons\" />\r\n            </div>\r\n            <div className={'color-selector__selector' + colorMenuOpen}>\r\n                <div className=\"color-selector__select\">\r\n                    {colors.map(({ title, value }) => (\r\n                            <div\r\n                                key={title}\r\n                                onClick={selectColor}\r\n                                className={color.title === title ? 'selected' : ''}\r\n                                style={{background: value}}\r\n                                data-title={title}\r\n                                data-value={value}\r\n                                title={title.charAt(0).toUpperCase() + title.slice(1)}\r\n                            ></div>\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ColorPicker;","import React, { useEffect, useState } from 'react';\r\n\r\nconst LocationInput = (props) => {\r\n    const [location, setLocation] = useState(\r\n        props.location ? props.location : {\r\n            description: '',\r\n            address: '',\r\n            placeId: '',\r\n            coordinates: {\r\n                lat: 0,\r\n                lng: 0\r\n            }\r\n        }\r\n    );\r\n    const [description, setDescription] = useState(\r\n        location.description ? location.description : ''\r\n    );\r\n    \r\n    let map, autocomplete\r\n\r\n    useEffect(() => {\r\n        if (!window.google) {\r\n            const script = document.createElement(`script`);\r\n            script.src =\r\n                'https://maps.googleapis.com/maps/api/js?key=' +\r\n                process.env.REACT_APP_GOOGLE_MAPS_API_KEY + \r\n                '&libraries=places&v=weekly';\r\n            document.head.append(script);\r\n            script.addEventListener(`load`, onLoad);\r\n            return () => script.removeEventListener(`load`, onLoad)\r\n        } else onLoad()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.location.description) { \r\n            setLocation(props.location);\r\n            setDescription(props.location.description);\r\n        } else {\r\n            setLocation({\r\n                description: '',\r\n                address: '',\r\n                placeId: '',\r\n                coordinates: {\r\n                    lat: 0,\r\n                    lng: 0\r\n                }\r\n            });\r\n            setDescription('');\r\n        }; \r\n    }, [props.location]);\r\n    \r\n    const onLoad = () => {\r\n        const mapElement = document.createElement('div');\r\n        const input = document.getElementById('location-autocomplete')\r\n        map = new window.google.maps.Map(mapElement, {\r\n            center: { lat: -34.397, lng: 150.644 },\r\n            zoom: 6,\r\n        });\r\n        autocomplete = new window.google.maps.places.Autocomplete(input)\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const pos = {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    };\r\n                    map.setCenter(pos)\r\n                }\r\n            );\r\n        }\r\n        autocomplete.bindTo(\"bounds\", map);\r\n        autocomplete.setFields([\"place_id\", \"geometry\", \"name\", \"formatted_address\"]);\r\n        const geocoder = new window.google.maps.Geocoder();\r\n        input.addEventListener('keyup', function() {\r\n            if (this.value !== '') {\r\n                autocomplete.addListener(\"place_changed\", () => {\r\n                    const place = autocomplete.getPlace()\r\n                    let address = place.formatted_address.split(',')\r\n                    address.pop()\r\n                    address = address.join(', ')\r\n                    \r\n                    if (!place.place_id) {\r\n                        return\r\n                    }\r\n                    geocoder.geocode({ placeId: place.place_id }, (results, status) => {\r\n                        if (status !== \"OK\" && results) {\r\n                            console.log(\"Geocoder failed due to: \" + status)\r\n                            return;\r\n                        }\r\n                        map.setCenter(results[0].geometry.location)\r\n                    \r\n                    });\r\n                    \r\n                    const coordinateString = JSON.stringify(place.geometry.location);\r\n                    const coordinateJSON = JSON.parse(coordinateString);\r\n                    const coordinates = coordinateJSON\r\n                    \r\n                    const location = {\r\n                        description: place.name,\r\n                        address: address,\r\n                        placeId: place.place_id,\r\n                        coordinates\r\n                    }\r\n                    setLocation(location);\r\n                    setDescription(location.description);\r\n                    props.onLocationChange(location);\r\n                })\r\n                if (autocomplete.getPlace() === undefined) {\r\n                    const location = {\r\n                        description: this.value,\r\n                        address: '',\r\n                        placeId: '',\r\n                        coordinates: {\r\n                            lat: 0,\r\n                            lng: 0\r\n                        }\r\n                    }\r\n                    setLocation(location);\r\n                    setDescription(location.description);\r\n                    props.onLocationChange(location);\r\n                }\r\n            } else {\r\n                const location = {\r\n                    description: '',\r\n                    address: '',\r\n                    placeId: '',\r\n                    coordinates: {\r\n                        lat: 0,\r\n                        lng: 0\r\n                    }\r\n                };\r\n                setLocation(location);\r\n                setDescription('');\r\n                props.onLocationChange(location);\r\n            }\r\n        })\r\n    }\r\n\r\n    const onLocationChange = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                onChange={onLocationChange}\r\n                value={description}\r\n                id=\"location-autocomplete\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport { LocationInput as default };\r\n\r\n\r\n","import moment from 'moment';\r\n\r\nconst getRoundedMinute = () => {\r\n    let minute = moment().minute();\r\n    minute = Math.ceil(minute / 5) * 5;\r\n    if(minute === 60) {\r\n        minute = 0;\r\n    }\r\n    return minute;\r\n}\r\n\r\nexport { getRoundedMinute as default };","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { DatePicker, TimePicker } from 'antd';\r\nimport ColorPicker from './ColorPicker';\r\nimport LocationInput from './LocationInput';\r\nimport { validateEventForm } from '../utils/formValidators';\r\nimport getRoundedMinute from '../utils/getRoundedMinute';\r\n\r\nexport const EventForm = (props) => {    \r\n    const [title, setTitle] = useState(props.event ? props.event.title : '');\r\n    const [startDate, setStartDate] = useState(\r\n        props.event ? moment(props.event.startDate) : moment(props.currentDate.valueOf()).minute(getRoundedMinute()).hour(moment().hour()).startOf('minute')\r\n    );\r\n    const [startTime, setStartTime] = useState(\r\n        props.event ? moment(props.event.startDate) : moment(props.currentDate.valueOf()).minute(getRoundedMinute()).hour(moment().hour()).startOf('minute')\r\n    );\r\n    const [endDate, setEndDate] = useState(\r\n        props.event ? moment(props.event.endDate) : moment(props.currentDate.valueOf()).minute(getRoundedMinute()).hour(moment().hour()).startOf('minute').add(1, 'hour')\r\n    );\r\n    const [endTime, setEndTime] = useState(\r\n        props.event ? moment(props.event.endDate) : moment(props.currentDate.valueOf()).minute(getRoundedMinute()).hour(moment().hour()).startOf('minute').add(1, 'hour')\r\n    );\r\n    const [color, setColor] = useState(\r\n        props.event ? props.event.color : 'peacock'\r\n    );\r\n    const [duration, setDuration] = useState(\r\n        props.event ? props.event.duration : 'time'\r\n    );\r\n    const [location, setLocation] = useState(\r\n        props.event ? props.event.location : {\r\n            description: '',\r\n            address: '',\r\n            placeId: '',\r\n            coordinates: {\r\n                lat: 0,\r\n                lng: 0\r\n            }\r\n        }\r\n    );\r\n    const [notes, setNotes] = useState(\r\n        props.event ? props.event.notes : ''\r\n    )\r\n\r\n    const resetEventForm = () => {\r\n        setTitle('');\r\n        setStartDate(props.currentDate.minute(getRoundedMinute()).hour(moment().hour()).startOf('minute'));\r\n        setStartTime(props.currentDate.minute(getRoundedMinute()).hour(moment().hour()).startOf('minute'));\r\n        setEndDate(props.currentDate.minute(getRoundedMinute()).hour(moment().hour()).startOf('minute').add(1, 'hour'));\r\n        setEndTime(props.currentDate.minute(getRoundedMinute()).hour(moment().hour()).startOf('minute').add(1, 'hour'));\r\n        setColor('peacock');\r\n        setDuration('time');\r\n        setLocation({\r\n            description: '',\r\n            address: '',\r\n            placeId: '',\r\n            coordinates: {\r\n                lat: 0,\r\n                lng: 0\r\n            }\r\n        });\r\n        setNotes('');\r\n    }\r\n\r\n    const onStartDateChange = (date) => {\r\n        if (date) {\r\n            setStartDate(date);\r\n            if(date > endDate) {\r\n                setEndDate(date);\r\n            }\r\n        } else {\r\n            setStartDate(null);\r\n        }\r\n    }\r\n\r\n    const onStartTimeChange = (time) => {\r\n        if (time) {\r\n            setStartTime(time);\r\n            setEndTime(time.add(1, 'hour'));\r\n        } else {\r\n            setStartTime(null);\r\n        }\r\n    };\r\n\r\n    const onEndDateChange = (date) => {\r\n        if (date) {\r\n            setEndDate(date);\r\n            if (date < startDate) {\r\n                if (startDate) {\r\n                    setEndDate(startDate);\r\n                } else {\r\n                    setEndDate(null)\r\n                }\r\n            }\r\n        } else {\r\n            setEndDate(null);\r\n        }\r\n    };\r\n\r\n    const onEndTimeChange = (time) => {\r\n        if (time) {\r\n            setEndTime(time);\r\n            if (time < startTime) {\r\n                if (startTime) {\r\n                    setEndTime(startTime.add(5, 'minutes'));\r\n                } else {\r\n                    setEndTime(null);\r\n                }\r\n            }\r\n        } else {\r\n            setEndTime(null)\r\n        }\r\n    }\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const eventFields = {\r\n            title,\r\n            startDate,\r\n            endDate\r\n        }\r\n        const eventFormMessages = validateEventForm(eventFields);\r\n\r\n        if (eventFormMessages.length <= 0) {\r\n            let start, end\r\n            if (duration === 'day') {\r\n                start = moment(startDate.valueOf()).startOf('day').valueOf();\r\n                end = moment(endDate.valueOf()).endOf('day').valueOf();\r\n            } else {\r\n                start = startDate.valueOf();\r\n                end = endDate.valueOf();\r\n            }\r\n            const event = {\r\n                title,\r\n                startDate: start,\r\n                endDate: end,\r\n                duration,\r\n                color,\r\n                location,\r\n                notes\r\n            };\r\n            resetEventForm();\r\n            props.onSubmit(event);\r\n        } else {\r\n            const messages = eventFormMessages.map((message) => message.content)\r\n            props.onSetMessages(messages);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"calendar-form__wrapper\">\r\n            <div className=\"calendar-form__title\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"event-title\"\r\n                    id=\"event-title\"\r\n                    value={title}\r\n                    onChange={e => setTitle(e.target.value)}\r\n                    title=\"Event Title\"\r\n                />\r\n                <label>Title</label>\r\n            </div>\r\n            <div className=\"calendar-form__start\">\r\n                <div>\r\n                    {duration === 'time' && <TimePicker\r\n                        defaultValue={startTime}\r\n                        value={startTime}\r\n                        className=\"time\"\r\n                        showNow={false}\r\n                        format=\"h:mm a\"\r\n                        minuteStep={5}\r\n                        onChange={time => onStartTimeChange(time)}\r\n                        id=\"event-start-time\"\r\n                    />}\r\n                    <DatePicker\r\n                        defaultValue={startDate}\r\n                        value={startDate}\r\n                        className=\"date\"\r\n                        format={\"MMM Do\"}\r\n                        showToday={false}\r\n                        onChange={date => onStartDateChange(date)}\r\n                        id=\"event-start-date\"\r\n                    />\r\n                </div>\r\n                <label>Start</label>\r\n            </div>\r\n            <div className=\"calendar-form__end\">\r\n                <div>\r\n                    {duration === 'time' && <TimePicker\r\n                        defaultValue={endTime}\r\n                        value={endTime}\r\n                        className=\"time\"\r\n                        showNow={false}\r\n                        format=\"h:mm a\"\r\n                        minuteStep={5}\r\n                        onChange={time => onEndTimeChange(time)}\r\n                        id=\"event-end-time\"\r\n                    />}\r\n                    <DatePicker\r\n                        defaultValue={endDate}\r\n                        value={endDate}\r\n                        className=\"date\"\r\n                        format={\"MMM Do\"}\r\n                        showToday={false}\r\n                        onChange={date => onEndDateChange(date)}\r\n                        id=\"event-end-date\"\r\n                    />\r\n                </div>\r\n                <label>End</label>\r\n            </div>\r\n            <div className=\"calendar-form__color-duration\">\r\n                <div className=\"color\">\r\n                    <ColorPicker\r\n                        color={color}\r\n                        onColorChange={color => setColor(color)}\r\n                    />\r\n                    <label>Color</label>\r\n                </div>\r\n                <div className=\"duration\">\r\n                    <div>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"event-duration\"\r\n                            id=\"event-duration-hourly\"\r\n                            value=\"time\"\r\n                            checked={duration === 'time' ? true : false}\r\n                            onChange={e => setDuration(e.target.value)} \r\n                        />\r\n                        <label htmlFor=\"event-duration-hourly\" title=\"Select Hourly Duration\">Time</label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"event-duration\"\r\n                            id=\"event-duration-daily\"\r\n                            value=\"day\"\r\n                            checked={duration === 'day' ? true : false}\r\n                            onChange={e => setDuration(e.target.value)} \r\n                        />\r\n                        <label htmlFor=\"event-duration-daily\" title=\"Select All Day Duration\">All Day</label>\r\n                    </div>\r\n                    <label>Duration</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"calendar-form__location\">\r\n                <LocationInput\r\n                    location={location} \r\n                    onLocationChange={location => setLocation(location)}\r\n                />\r\n                <label>Location</label>\r\n            </div>\r\n            <div className=\"calendar-form__notes\">\r\n                <textarea\r\n                    name=\"event-notes\"\r\n                    id=\"event-notes\"\r\n                    value={notes}\r\n                    onChange={e => setNotes(e.target.value)}\r\n                    rows=\"3\"\r\n                ></textarea>\r\n                <label>Notes</label>\r\n            </div>\r\n            <div className=\"calendar-form__save\">\r\n                <button title=\"Save Event\" className=\"button button--save\">Save Event</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    calendarDate: state.views.calendarDate,\r\n    currentDate: state.views.currentDate\r\n});\r\n\r\nexport default connect(mapStateToProps)(EventForm);","const validateEventForm = ({ title, startDate, endDate }) => {\r\n    const messages = [];\r\n\r\n    if (!title || title === '') {\r\n        messages.push({\r\n            content: 'Please enter a title for the event.',\r\n            element: 'title'\r\n        });\r\n    }\r\n\r\n    if (!startDate || startDate === '') {\r\n        messages.push({\r\n            content: 'Please select a date for the event to start.',\r\n            element: 'startDate'\r\n        });\r\n    }\r\n\r\n    if (!endDate || endDate === '') {\r\n        messages.push({\r\n            content: 'Please select a date for the event to end.',\r\n            element: 'endDate'\r\n        });\r\n    }\r\n\r\n    return messages;\r\n}\r\n\r\nexport { validateEventForm };","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst EventFormModal = (props) => {\r\n    \r\n    return (\r\n        <Modal\r\n            isOpen={props.messages.length >= 1 ? true : false}\r\n            onRequestClose={props.handleClearMessages}\r\n            contentLabel=\"Error!\"\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"overlay\"\r\n            ariaHideApp={false}\r\n        >\r\n            <h3 className=\"modal__title\">Error!</h3>\r\n            <p className=\"modal__body\">The following errors occured on Event submission:</p>\r\n            <ul className=\"modal__list\">\r\n                {props.messages && props.messages.map((message, index) => (\r\n                    <li key={index}>{message}</li>\r\n                ))}\r\n            </ul>\r\n            <button className=\"button button--modal\" onClick={props.handleClearMessages}>Okay</button>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport { EventFormModal as default };","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment'\r\nimport { startAddEvent } from '../actions/events';\r\nimport { setActiveView, setLastView } from '../actions/views';\r\nimport { Close } from '../svg/Icons';\r\nimport EventForm from './EventForm';\r\nimport EventFormModal from './EventFormModal';\r\n\r\nexport const AddEventPage = (props) => {\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const onSetMessages = (messages) => {\r\n        setMessages(messages);\r\n    };\r\n\r\n    const closeAdd = () => {\r\n        props.setActiveView('list');\r\n        props.setLastView('');\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        console.log(moment(event.startDate).format(), moment(event.endDate).format());\r\n        props.startAddEvent(event);\r\n        props.setActiveView('list');\r\n    };\r\n\r\n    const handleClearMessages = () => setMessages([]);\r\n\r\n    return (\r\n        <div className=\"calendar-add\">\r\n            <button onClick={closeAdd} className=\"button button--close\">\r\n                <Close />\r\n            </button>\r\n            <h1 className=\"calendar-add__title\">Schedule Event</h1>\r\n            <EventForm onSubmit={onSubmit} onSetMessages={onSetMessages} />\r\n            <EventFormModal\r\n                messages={messages}\r\n                handleClearMessages={handleClearMessages}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startAddEvent: (event) => dispatch(startAddEvent(event)),\r\n    setActiveView: (activeView) => dispatch(setActiveView(activeView)),\r\n    setLastView: (lastView) => dispatch(setLastView(lastView))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(AddEventPage);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startEditEvent } from '../actions/events';\r\nimport { setActiveEvent, setActiveView, setLastView } from '../actions/views';\r\nimport { Close } from '../svg/Icons';\r\nimport EventForm from './EventForm';\r\nimport EventFormModal from './EventFormModal';\r\n\r\nexport const EditEventPage = (props) => {\r\n    const [messages, setMessages] = useState([])\r\n    const id = props.event.id.toString();\r\n    \r\n    const onSetMessages = (messages) => {\r\n        setMessages(messages);\r\n    };\r\n\r\n    const closeEdit = () => {\r\n        const lastView = props.views.lastView;\r\n        props.setLastView('');\r\n        props.setActiveView(lastView);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        props.startEditEvent(\r\n            id,\r\n            event\r\n        )\r\n        if(props.views.lastView !== '') {\r\n            props.setActiveEvent(event);\r\n        }\r\n        props.setLastView('')\r\n        props.setActiveView(props.views.lastView)\r\n    }\r\n\r\n    const handleClearMessages = () => setMessages([]);\r\n\r\n    return (\r\n        <div className=\"calendar-edit\"> \r\n            <button onClick={closeEdit} className=\"button button--close\">\r\n                <Close />\r\n            </button>\r\n            <h1 className=\"calendar-edit__title\">Update Event</h1>\r\n            <EventForm event={props.event} onSubmit={onSubmit} onSetMessages={onSetMessages} />\r\n            <EventFormModal\r\n                messages={messages}\r\n                handleClearMessages={handleClearMessages}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    event: state.views.activeEvent,\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startEditEvent: (id, event) => dispatch(startEditEvent(id, event)),\r\n    setActiveEvent: (event) => dispatch(setActiveEvent(event)),\r\n    setActiveView: (activeView) => dispatch(setActiveView(activeView)),\r\n    setLastView: (lastView) => dispatch(setLastView(lastView))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEventPage);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { setActiveEvent, setActiveView, setLastView } from '../actions/views';\r\nimport { startRemoveEvent } from '../actions/events';\r\nimport { ArrowForward, AutoFixHigh, Close, DeleteForever, Notes, Place, Schedule } from '../svg/Icons';\r\n\r\nexport const ViewEventPage = (props) => {\r\n    const { id, title, startDate, endDate, duration, color, location, notes } = props.views.activeEvent;\r\n\r\n    useEffect(() => {\r\n        if (!window.google) {\r\n            const script = document.createElement(`script`);\r\n            script.src =\r\n                'https://maps.googleapis.com/maps/api/js?key=' +\r\n                process.env.REACT_APP_GOOGLE_MAPS_API_KEY + \r\n                '&libraries=places&v=weekly';\r\n            document.head.append(script);\r\n            script.addEventListener(`load`, onLoad);\r\n            return () => script.removeEventListener(`load`, onLoad)\r\n        } else onLoad()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const onLoad = () => {\r\n        // set if statement for event.location.address\r\n        if (location.address) {\r\n            const directionsService = new window.google.maps.DirectionsService();\r\n            const directionsRenderer = new window.google.maps.DirectionsRenderer();\r\n            const mapElement = document.getElementById('map');\r\n            const map = new window.google.maps.Map(mapElement, {\r\n                center: location.coordinates,\r\n                zoom: 14,\r\n                disableDefaultUI: true,\r\n            });\r\n            directionsRenderer.setMap(map);\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        const pos = {\r\n                            lat: position.coords.latitude,\r\n                            lng: position.coords.longitude,\r\n                        };\r\n                        directionsService\r\n                            .route({\r\n                            origin: pos,\r\n                            destination: location.coordinates,\r\n                            travelMode: window.google.maps.TravelMode.DRIVING,\r\n                            })\r\n                            .then((response) => {\r\n                            directionsRenderer.setDirections(response);\r\n                            });\r\n                    }\r\n                );\r\n            }\r\n            \r\n            const contentString = `\r\n                <div>\r\n                    <strong>${location.description}</strong><br />\r\n                    <span>(${location.address})</span>\r\n                </div>\r\n            `;\r\n            const infowindow = new window.google.maps.InfoWindow({\r\n                content: contentString,\r\n              });\r\n            \r\n            const marker = new window.google.maps.Marker({\r\n                position: location.coordinates,\r\n                map,\r\n                title: location.description,\r\n            });\r\n\r\n            marker.addListener(\"click\", () => {\r\n                infowindow.open({\r\n                  anchor: marker,\r\n                  map,\r\n                  shouldFocus: false,\r\n                });\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const closeView = () => {\r\n        props.setActiveEvent(undefined);\r\n        props.setLastView('');\r\n        props.setActiveView('list');\r\n    }\r\n\r\n    const deleteEvent = () => {\r\n        props.startRemoveEvent({ id });\r\n    }\r\n\r\n    const editEvent = () => {\r\n        props.setActiveEvent(props.views.activeEvent);\r\n        props.setActiveView('edit');\r\n        props.setLastView('view');\r\n    }\r\n    \r\n    const startDay = moment(startDate).format('MMDDYYYY');\r\n    const endDay = moment(endDate).format('MMDDYYYY');\r\n\r\n    return (\r\n        <div className=\"calendar-view\">\r\n            <button onClick={closeView} className=\"button button--close\"><Close /></button>\r\n            <button onClick={deleteEvent} className=\"button button--delete\"><DeleteForever /></button>\r\n            <button onClick={editEvent} className=\"button button--edit\"><AutoFixHigh /></button>\r\n            <h1 className=\"calendar-view__title\">Event Details</h1>\r\n            <div className={`calendar-view__event-details ${color}`}>\r\n                <h2 className=\"event-title\"><div className=\"event-bullet\"></div> {title}</h2>\r\n                <div className=\"event-date__view\"><Schedule /> \r\n                    <div className=\"event-date__text\">{\r\n                        duration === 'day' ? (\r\n                            startDay !== endDay ? (\r\n                                <>\r\n                                    <div className=\"start-date\">\r\n                                        <div className=\"date\">{moment(startDate).format('ddd, MMM D')}</div>\r\n                                    </div>\r\n                                    <ArrowForward />\r\n                                    <div className=\"end-date\">\r\n                                        <div className=\"date\">{moment(endDate).format('ddd, MMM D')}</div>\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"start-date\">\r\n                                    <div className=\"date\">{moment(startDate).format('ddd, MMM D')}</div>\r\n                                </div>\r\n                            )\r\n                        ) : (\r\n                            startDay !== endDay ? (\r\n                                <>\r\n                                    <div className=\"start-date\">\r\n                                        <div className=\"date\">{moment(startDate).format('ddd, MMM D')}</div>\r\n                                        <div className=\"time\">{moment(startDate).format('h:mma')} - {moment(endDate).format('h:mma')}</div>\r\n                                    </div>\r\n                                    <ArrowForward />\r\n                                    <div className=\"end-date\">\r\n                                        <div className=\"date\">{moment(endDate).format('ddd, MMM D')}</div>\r\n                                        <div className=\"time\">{moment(startDate).format('h:mma')} - {moment(endDate).format('h:mm a')}</div>\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"start-date\">\r\n                                    <div className=\"date\">{moment(startDate).format('ddd, MMM D')}</div>\r\n                                    <div className=\"time\">{moment(startDate).format('h:mma')} - {moment(endDate).format('h:mma')}</div>\r\n                                </div>\r\n                            )\r\n                        )\r\n                    }</div>\r\n                </div>\r\n                {location.description && \r\n                    <div className=\"event-location__view\">\r\n                        <Place />\r\n                        <div className=\"event-location__text\">\r\n                            {\r\n                                location.address ? (\r\n                                    <>\r\n                                        <div className=\"description\">{location.description}</div>\r\n                                        {location.description !== location.address.split(',')[0] &&\r\n                                            <div className=\"address\">{location.address}</div>\r\n                                        }\r\n                                    </>\r\n                                ) : (\r\n                                    <div className=\"description\">{location.description}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {location.address && \r\n                    <div id=\"map\" className=\"event-location__map\"></div>\r\n                }\r\n                {notes && \r\n                    <div className=\"event-notes__view\">\r\n                        <Notes />\r\n                        <div className=\"event-notes__text\">\r\n                            <div className=\"title\">Notes</div>\r\n                            <div className=\"notes\">{notes}</div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setActiveEvent: (event) => dispatch(setActiveEvent(event)),\r\n    setActiveView: (view) => dispatch(setActiveView(view)),\r\n    setLastView: (lastView) => dispatch(setLastView(lastView)),\r\n    startRemoveEvent: (data) => dispatch(startRemoveEvent(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewEventPage);","import React from 'react';\r\nimport { Schedule } from '../svg/Icons';\r\n\r\nconst EventListHoliday = (props) => {\r\n    return (\r\n        <div className=\"calendar-list__day-holiday holiday\">\r\n            <div className=\"event-title\">\r\n                <div className=\"event-bullet\"></div>\r\n                {props.holiday.name}\r\n            </div>\r\n            <div className=\"event-time\"><Schedule /> All Day</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventListHoliday;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { setActiveEvent, setActiveView, setLastView } from '../actions/views';\r\nimport { startRemoveEvent } from '../actions/events';\r\nimport { AutoFixHigh, DeleteForever, Schedule, Place } from '../svg/Icons';\r\n\r\nexport const EventListItem = (props) => {\r\n    const { id, title, startDate, endDate, duration, color, location } = props.event;\r\n\r\n    const deleteEvent = () => {\r\n        props.startRemoveEvent({ id });\r\n    }\r\n\r\n    const editEvent = () => {\r\n        props.setActiveEvent(props.event);\r\n        props.setLastView('list');\r\n        props.setActiveView('edit');\r\n    }\r\n\r\n    const viewEvent = () => {\r\n        props.setActiveEvent(props.event);\r\n        props.setLastView('list');\r\n        props.setActiveView('view');\r\n    }\r\n\r\n    return (\r\n        <div className={`calendar-list__day-event ${color}`}>\r\n            <div className=\"event-title\" onClick={viewEvent}>\r\n                <div className=\"event-bullet\"></div>\r\n                {title}\r\n            </div>\r\n            <div className=\"event-buttons-time\">\r\n                <div className=\"event-buttons\">\r\n                    <button onClick={editEvent} className=\"button button--edit\"><AutoFixHigh /></button>\r\n                    <button onClick={deleteEvent} className=\"button button--delete\"><DeleteForever /></button>\r\n                </div>\r\n                { // Showing event duration\r\n                    duration === 'time' ? (\r\n                        <div className=\"event-time\">\r\n                            <Schedule /> {moment(startDate).format('h:mm a')} -  {moment(endDate).format('h:mm a')}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"event-time\"><Schedule /> All Day</div>\r\n                    )\r\n                }\r\n            </div>\r\n            \r\n            { // Showing event location if provided with map if address provided\r\n                location.description && \r\n                <div className=\"event-location\">\r\n                    <Place /> {location.description}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setActiveEvent: (event) => dispatch(setActiveEvent(event)),\r\n    setActiveView: (view) => dispatch(setActiveView(view)),\r\n    setLastView: (lastView) => dispatch(setLastView(lastView)),\r\n    startRemoveEvent: (data) => dispatch(startRemoveEvent(data))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EventListItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { getVisibleEvents } from '../selectors/events';\r\nimport getHolidayList from '../utils/getHolidayList';\r\nimport { setActiveView, setLastView } from '../actions/views';\r\nimport { Close, MoreTime } from '../svg/Icons';\r\nimport EventListHoliday from './EventListHoliday';\r\nimport EventListItem from './EventListItem';\r\n\r\nexport const EventListPage = (props) => {\r\n    const dateValue = props.views.currentDate.valueOf();\r\n\r\n    const addEvent = () => {\r\n        props.setActiveView('add');\r\n        props.setLastView('list')\r\n    }\r\n    \r\n    const holiday = getHolidayList(props.views.currentDate.year()).find((holiday) => {\r\n        const start = moment(dateValue).startOf('day').valueOf();\r\n        const end = moment(dateValue).endOf('day').valueOf();\r\n        const holidayDay = moment().date(holiday.date).month(holiday.month).year(props.views.currentDate.year()).valueOf();\r\n\r\n        return holidayDay >= start && holidayDay <= end && holiday.display\r\n    })\r\n    \r\n    const closeList = () => {\r\n        props.setActiveView('');\r\n        props.setLastView('');\r\n    }\r\n\r\n    const events = props.events;\r\n    \r\n    return (\r\n        <div className=\"calendar-list__wrapper\">\r\n            <button className=\"button button--close\" onClick={closeList}>\r\n                <Close />\r\n            </button>\r\n            <button className=\"button button--add\" onClick={addEvent}>\r\n                <MoreTime />\r\n            </button>\r\n            <h1 className=\"calendar-list__title\">Events for {props.views.currentDate.format('MMMM')}</h1>\r\n            <div className=\"calendar-list__event-day\">\r\n                {props.views.currentDate.date()}\r\n            </div>\r\n            <div className=\"calendar-list__event-list\">\r\n                {holiday && <EventListHoliday holiday={holiday} />}\r\n                {\r\n                    events.length > 0 ? (\r\n                        events.map((event) => {\r\n                            return <EventListItem event={event} key={event.id} />\r\n                        })\r\n                    ) : (\r\n                        <div className=\"calendar-list__no-event\">Currently no events scheduled for this date.</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views,\r\n    events: getVisibleEvents(state.events, state.filters)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setActiveView: (activeView) => dispatch(setActiveView(activeView)),\r\n    setLastView: (lastView) => dispatch(setLastView(lastView))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventListPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddEventPage from './AddEventPage';\r\nimport EditEventPage from './EditEventPage';\r\nimport ViewEventPage from './ViewEventPage';\r\nimport EventListPage from './EventListPage';\r\n\r\nexport const CalendarAction = (props) => {\r\n    switch (props.views.activeView) {\r\n        case 'list':\r\n            return (<EventListPage />);\r\n        case 'add':\r\n            return (<AddEventPage />);\r\n        case 'edit':\r\n            return (<EditEventPage />);\r\n        case 'view':\r\n            return (<ViewEventPage />);\r\n        default:\r\n            console.log(window.innerWidth)\r\n            if(window.innerWidth >= 1172) {\r\n                return (<EventListPage />)\r\n            } else {\r\n                return (<></>);\r\n            }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nexport default connect(mapStateToProps)(CalendarAction);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CalendarSelector from './CalendarSelector';\r\nimport CalendarView from './CalendarView';\r\nimport CalendarAction from './CalendarAction';\r\n\r\nconst CalendarDashboardPage = (props) => {\r\n    return (\r\n        <main>\r\n            <CalendarSelector />\r\n            <div className =\"calendar-active__wrapper content-container\">\r\n                <CalendarView />\r\n                <CalendarAction />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    views: state.views\r\n});\r\n\r\nexport default connect(mapStateToProps)(CalendarDashboardPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startLogin } from '../actions/auth';\r\n\r\nexport const LoginPage = ({ startLogin }) => (\r\n    <div className=\"box-layout\">\r\n        <div className=\"box-layout__box\">\r\n            <h1 className=\"box-layout__title\">dusk</h1>\r\n            <p>A management app to get your schedule under control.</p>\r\n            <button className=\"button button--login\" onClick={startLogin}>Login with Google</button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startLogin: () => dispatch(startLogin())\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(LoginPage);","import { firebase, googleAuthProvider } from '../firebase/firebase';\r\n\r\nexport const login = (uid) => ({\r\n    type: 'LOGIN',\r\n    uid\r\n});\r\n\r\nexport const startLogin = () => {\r\n    return () => {\r\n        return firebase.auth().signInWithPopup(googleAuthProvider)\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: 'LOGOUT'\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return () => {\r\n        return firebase.auth().signOut();\r\n    }\r\n}","import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <p>Not Found Page.</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { NotFoundPage as default };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { startLogout } from '../actions/auth';\r\n\r\nexport const Header = ({ startLogout, uid }) => (\r\n    <header className=\"header\">\r\n        <div className=\"content-container\">\r\n            <div className=\"header__content\">\r\n                {uid ? (<>\r\n                    <Link className=\"header__title\" to=\"/calendar\">\r\n                        <h1>dusk</h1>\r\n                    </Link>\r\n                    <button className=\"button button--link\" onClick={startLogout}>Logout</button>\r\n                </>) : <h1>dusk</h1>}\r\n            </div>\r\n        </div>\r\n    </header>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    uid: state.auth.uid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startLogout: () => dispatch(startLogout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        <div className=\"content-container\">\r\n            <div className=\"footer__content\">\r\n                Designer | Jonathan D. Wheeler\r\n            </div>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n    <Route {...rest} component={(props) => (\r\n        isAuthenticated ? (\r\n            <>\r\n                <Header />\r\n                <Component {...props} />\r\n                <Footer />\r\n            </>\r\n        ) : (\r\n            <Redirect to='/' />\r\n        )\r\n    )} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: !!state.auth.uid\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n    <Route {...rest} component={(props) => (\r\n        isAuthenticated ? (\r\n            <Redirect to=\"/calendar\" />\r\n        ) : (\r\n            <Component {...props} />\r\n        )\r\n    )} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: !!state.auth.id\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport CalendarDashboardPage from '../components/CalendarDashboardPage';\r\nimport LoginPage from '../components/LoginPage'\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router history={history}>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path=\"/\" component={LoginPage} exact={true} />\r\n                    <PrivateRoute patch=\"/calendar\" component={CalendarDashboardPage} />\r\n                    <Route component={NotFoundPage} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport { history, AppRouter as default };","const eventsReducerDefaultState = [];\r\n\r\nconst eventsReducer = (state = eventsReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_EVENT':\r\n            return [\r\n                ...state,\r\n                action.event\r\n            ];\r\n        case 'REMOVE_EVENT':\r\n            return state.filter(({ id }) => id !== action.id);\r\n        case 'EDIT_EVENT':\r\n            return state.map((event) => {\r\n                if (event.id === action.id) {\r\n                    return {\r\n                        ...event,\r\n                        ...action.updates\r\n                    };\r\n                } else {\r\n                    return event;\r\n                }\r\n            });\r\n        case 'POPULATE_EVENTS':\r\n            return action.events\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { eventsReducer as default };","import moment from 'moment';\r\n\r\nconst filtersReducerDefaultState = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: moment().startOf('day'),\r\n    endDate: moment().endOf('day')\r\n}\r\n\r\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_FILTER':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case 'SORT_BY_DATE':\r\n            return {\r\n                ...state,\r\n                sortBy: 'date'\r\n            };\r\n        case 'SET_START_DATE':\r\n            return {\r\n                ...state,\r\n                startDate: action.startDate.startOf('day')\r\n            };\r\n        case 'SET_END_DATE':\r\n            return {\r\n                ...state,\r\n                endDate: action.endDate.endOf('day')\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport { filtersReducer as default };","const holidaysReducerDefaultState = [];\r\n\r\nconst holidaysReducer = (state = holidaysReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_HOLIDAY':\r\n            return [\r\n                ...state,\r\n                action.holiday\r\n            ];\r\n        case 'REMOVE_HOLIDAY':\r\n            return state.filter(({ id }) => id !== action.id);\r\n        case 'EDIT_HOLIDAY':\r\n            return state.map((holiday) => {\r\n                if (holiday.id === action.id) {\r\n                    return {\r\n                        ...holiday,\r\n                        ...action.updates\r\n                    };\r\n                } else {\r\n                    return holiday;\r\n                }\r\n            });\r\n        case 'POPULATE_HOLIDAYS':\r\n            return action.holidays\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport { holidaysReducer as default };","import moment from 'moment';\r\n\r\nconst viewsReducerDefaultState = {\r\n    activeCalendar: 'monthly',\r\n    activeView: '',\r\n    activeEvent: undefined,\r\n    lastView: '',\r\n    calendarDate: moment(),\r\n    currentDate: moment()\r\n};\r\n\r\nconst viewsReducer = (state = viewsReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ACTIVE_CALENDAR':\r\n            const activeCalendar = action.activeCalendar;\r\n            return {\r\n                ...state,\r\n                activeCalendar\r\n            };\r\n        case 'SET_ACTIVE_VIEW':\r\n            const activeView = action.activeView;\r\n            return {\r\n                ...state,\r\n                activeView\r\n            };\r\n        case 'SET_ACTIVE_EVENT':\r\n            const activeEvent = action.activeEvent;\r\n            return {\r\n                ...state,\r\n                activeEvent\r\n            };\r\n        case 'SET_LAST_VIEW':\r\n            const lastView = action.lastView;\r\n            return {\r\n                ...state,\r\n                lastView\r\n            }\r\n        case 'SET_CALENDAR_DATE':\r\n            const calendarDate = action.calendarDate;\r\n            return {\r\n                ...state,\r\n                calendarDate\r\n            }\r\n        case 'SET_CURRENT_DATE':\r\n            const currentDate = action.currentDate;\r\n            return {\r\n                ...state,\r\n                currentDate\r\n            }\r\n        case 'SET_TODAY_DATE':\r\n            return {\r\n                ...state,\r\n                calendarDate: moment().startOf('day'),\r\n                currentDate: moment().startOf('day')\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport { viewsReducer as default };","const authReducer =  (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                uid: action.uid\r\n            }\r\n        case 'LOGOUT':\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { authReducer as default };","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport eventsReducer from '../reducers/events';\r\nimport filtersReducer from '../reducers/filters';\r\nimport holidaysReducer from '../reducers/holidays';\r\nimport viewsReducer from '../reducers/views';\r\nimport authReducer from '../reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            events: eventsReducer,\r\n            filters: filtersReducer,\r\n            holidays: holidaysReducer,\r\n            views: viewsReducer,\r\n            auth: authReducer\r\n        }),\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nexport { configureStore as default };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/loading.50cd3412.gif\";","import React from 'react';\r\nimport { Header } from './Header';\r\nimport Footer from './Footer';\r\nimport loader from '../images/loading.gif'\r\n\r\nconst LoadingPage = () => {\r\n    return (\r\n        <div className=\"loading-page__wrapper\">\r\n            <Header />\r\n            <div className=\"loader\">\r\n                <img className=\"loader__image\" src={loader} alt=\"loading\" />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingPage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport AppRouter, { history } from './routers/AppRouter';\r\nimport configureStore from './store/configureStore';\r\nimport { firebase } from './firebase/firebase';\r\nimport { login, logout } from './actions/auth';\r\nimport { startPopulateEvents } from './actions/events';\r\nimport { setTodayDate } from './actions/views';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport 'react-dates/initialize';\r\nimport 'antd/dist/antd.css';\r\nimport './styles/styles.scss';\r\n\r\nconst store = configureStore();\r\n\r\nconst jsx = (\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>\r\n);\r\n\r\nlet hasRendered = false;\r\nconst renderApp = () => {\r\n  if (!hasRendered) {\r\n    ReactDOM.render(\r\n      <React.StrictMode>{jsx}</React.StrictMode>, \r\n      document.getElementById('root')\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <LoadingPage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nfirebase.auth().onAuthStateChanged((user) => {\r\n  if (user) {\r\n    store.dispatch(login(user.uid));\r\n    store.dispatch(setTodayDate());\r\n    store.dispatch(startPopulateEvents()).then(() => {\r\n        renderApp();\r\n        if (history.location.pathname === '/') {\r\n            history.push('/calendar')\r\n        }\r\n    });\r\n  } else {\r\n    store.dispatch(logout());\r\n    renderApp();\r\n    history.push('/');\r\n  }\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}